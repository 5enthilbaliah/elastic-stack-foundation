version: "3.8"

services:
  elastic-setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.2
    container_name: elastic-setup
    volumes:
      - vol-elastic-data:/usr/share/elasticsearch/data
    networks:
      - net-amrita
    user: "0"
    command: >
      bash -c '  if [ ! -e data/elastic-search-foundation.ready ] ; then

        echo "Waiting for Elasticsearch availability";  

        echo "elastic can start now!!!" > data/elastic-search-foundation.ready

        until curl -s http://elastic-search-foundation:9200 | grep -q "missing authentication credentials"; do sleep 30; done; 

        curl -k -u "elastic:${ELASTIC_PASSWORD}" -X POST "http://elastic-search-foundation:9200/_security/user/${KIBANA_SYSTEM}" -H "Content-Type: application/json" -d "
            {
              \"password\" : \"${KIBANA_SYSTEM_PASSWORD}\",
              \"roles\" : [ \"kibana_system\" ],
              \"full_name\" : \"${KIBANA_SYSTEM_NAME}\",
              \"email\" : \"${KIBANA_SYSTEM_EMAIL}\",
              \"metadata\" : {
                \"intelligence\" : 7
              }
            }"
        echo "Created Kibana sys";  

        curl -k -u "elastic:${ELASTIC_PASSWORD}" -X POST "http://elastic-search-foundation:9200/_security/user/${KIBANA_ADMIN}" -H "Content-Type: application/json" -d "
            {
              \"password\" : \"${KIBANA_ADMIN_PASSWORD}\",
              \"roles\" : [ \"kibana_admin\" ],
              \"full_name\" : \"${KIBANA_ADMIN_NAME}\",
              \"email\" : \"${KIBANA_ADMIN_EMAIL}\",
              \"metadata\" : {
                \"intelligence\" : 7
              }
            }"
        echo "Created Kibana admin";
      
        curl -k -u "elastic:${ELASTIC_PASSWORD}" -X POST "http://elastic-search-foundation:9200/_security/user/${APM_SYSTEM}" -H "Content-Type: application/json" -d "
                  {
                    \"password\" : \"${APM_PASSWORD}\",
                    \"roles\" : [ \"apm_system\", \"apm_user\" ],
                    \"full_name\" : \"${APM_SYSTEM_NAME}\",
                    \"email\" : \"${APM_SYSTEM_EMAIL}\",
                    \"metadata\" : {
                      \"intelligence\" : 7
                    }
                  }"
        echo "Created APM user";
      
        curl -k -u "elastic:${ELASTIC_PASSWORD}" -X POST "http://elastic-search-foundation:9200/_security/user/${BEAT_SYSTEM}" -H "Content-Type: application/json" -d "
                          {
                            \"password\" : \"${BEAT_PASSWORD}\",
                            \"roles\" : [ \"beats_admin\", \"beats_system\" ],
                            \"full_name\" : \"${BEAT_SYSTEM_NAME}\",
                            \"email\" : \"${BEAT_SYSTEM_EMAIL}\",
                            \"metadata\" : {
                              \"intelligence\" : 7
                            }
                          }"
        echo "Created Beat user";
      
        curl -k -u "elastic:${ELASTIC_PASSWORD}" -X POST "http://elastic-search-foundation:9200/_security/user/${LOGSTASH_SYSTEM}" -H "Content-Type: application/json" -d "
                          {
                            \"password\" : \"${LOGSTASH_PASSWORD}\",
                            \"roles\" : [ \"logstash_admin\", \"logstash_system\" ],
                            \"full_name\" : \"${LOGSTASH_SYSTEM_NAME}\",
                            \"email\" : \"${LOGSTASH_SYSTEM_EMAIL}\",
                            \"metadata\" : {
                              \"intelligence\" : 7
                            }
                          }"
        echo "Created Logstash user";
      
        curl -k -u "elastic:${ELASTIC_PASSWORD}" -X POST "http://elastic-search-foundation:9200/_security/user/${SUPERUSER_SYSTEM}" -H "Content-Type: application/json" -d "
                          {
                            \"password\" : \"${SUPERUSER_PASSWORD}\",
                            \"roles\" : [ \"superuser\" ],
                            \"full_name\" : \"${SUPERUSER_SYSTEM_NAME}\",
                            \"email\" : \"${SUPERUSER_SYSTEM_EMAIL}\",
                            \"metadata\" : {
                              \"intelligence\" : 7
                            }
                          }"
        echo "Created Super user";
      
      else
        until curl -s http://elastic-search-foundation:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
      fi;

      echo "All done!"; '
    healthcheck:
      test: [ "CMD-SHELL", "[ -f data/elastic-search-foundation.ready ]" ]
      interval: 1s
      timeout: 5s
      retries: 120

  elastic-search-foundation:
    depends_on:
      elastic-setup:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.2
    container_name: elastic-search-foundation
    restart: unless-stopped
    volumes:
      - vol-elastic-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - net-amrita
    environment:
      - node.name=elastic-search
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    mem_limit: ${ES_MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -u \"elastic:${ELASTIC_PASSWORD}\" http://localhost:9200/_security/user/${KIBANA_SYSTEM} | grep -q 'kibana_system'"
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana-foundation:
    depends_on:
      elastic-search-foundation:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:8.9.2
    container_name: kibana-foundation
    restart: unless-stopped
    mem_limit: ${KB_MEM_LIMIT}
    volumes:
      - vol-kibana-data:/usr/share/kibana/data
    ports:
      - 5601:5601
    networks:
      - net-amrita
    environment:
      - ELASTICSEARCH_URL=http://elastic-search-foundation:9200
      - ELASTICSEARCH_HOSTS=http://elastic-search-foundation:9200
      - ELASTICSEARCH_USERNAME=${KIBANA_SYSTEM}
      - ELASTICSEARCH_PASSWORD=${KIBANA_SYSTEM_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'"
        ]
      interval: 10s
      timeout: 10s
      retries: 120

networks:
  net-amrita:
    external: true
    name: net-amrita

volumes:
  vol-elastic-data:
    driver: local
    name: vol-elastic-data
  vol-kibana-data:
    driver: local
    name: vol-kibana-data
